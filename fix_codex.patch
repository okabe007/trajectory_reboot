diff --git a/gui_app.py b/gui_app.py
index f6ce95e..d8f2cbd 100644
--- a/gui_app.py
+++ b/gui_app.py
@@ -327,52 +327,52 @@ class SimApp(tk.Tk):
             self.config_data.update(
                 edge=edge,
                 x_min=-half, x_max=half,
                 y_min=-half, y_max=half,
                 z_min=-half, z_max=half,
             )
 
         elif shape == "drop":
             r = (3 * vol_ul / (4 * math.pi)) ** (1 / 3)
             self.config_data.update(
                 drop_r=r,
                 radius=r,
                 x_min=-r, x_max=r,
                 y_min=-r, y_max=r,
                 z_min=-r, z_max=r,
             )
 
         elif shape == "spot":
             angle = float(self.config_data.get("spot_angle", 0.0))
             spot_r, bottom_r, bottom_h = _calc_spot_geometry(vol_ul, angle)
             self.config_data.update(
                 spot_r=spot_r,
                 spot_bottom_r=bottom_r,
                 spot_bottom_height=bottom_h,
                 radius=spot_r,
-                x_min=-spot_r, x_max=spot_r,
-                y_min=-spot_r, y_max=spot_r,
+                x_min=-bottom_r, x_max=bottom_r,
+                y_min=-bottom_r, y_max=bottom_r,
                 z_min=bottom_h,
                 z_max=spot_r,
             )
 
         elif shape == "ceros":
             self.config_data.update(
                 x_min=-8.15, x_max=8.15,
                 y_min=-8.15, y_max=8.15,
                 z_min=-8.15, z_max=8.15,
             )
 
         # --- ③ generic parameters ------------------------------------
         vsl = float(self.config_data.get("vsl", 0.0))
         hz = float(self.config_data.get("sampl_rate_hz", 1.0))
         self.config_data.update(
             step_length=vsl / hz if hz else 0.0,
             limit=1e-9,
         )
 
         # --- シミュレーションステップ数を sim_min と sampl_rate_hz から計算 ---
         sim_min = float(self.config_data.get("sim_min", 0.0))
         self.config_data["number_of_steps"] = int(sim_min * 60 * hz)
 
         # --- ④ 派生値計算（互換性用） ---------------------------------
         self.config_data = calculate_derived_constants(self.config_data)
