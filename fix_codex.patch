diff --git a/core/simulation.py b/core/simulation.py
index a9a9df0..2a5f3ac 100644
--- a/core/simulation.py
+++ b/core/simulation.py
@@ -1,42 +1,42 @@
 
 import numpy as np
 import matplotlib.pyplot as plt
 from matplotlib import patches
 from datetime import datetime
 import math
 import os
 from tools.plot_utils import plot_2d_trajectories
 from core.geometry import CubeShape, DropShape, SpotShape, CerosShape
 from tools.derived_constants import calculate_derived_constants
 
 
 def _egg_position(constants):
     """Return (egg_x, egg_y, egg_z) according to shape and localization."""
     shape = constants.get("shape", "cube").lower()
     loc = constants.get("egg_localization", "center")
-    r = constants.get("gamete_r", 0)
+    r = constants["gamete_r"]
 
     if shape == "cube":
         positions = {
             "center": (0, 0, 0),
             "bottom_center": (0, 0, constants["z_min"] + r),
             "bottom_side": (
                 constants["x_min"] / 2 + r,
                 constants["y_min"] / 2 + r,
                 constants["z_min"] + r,
             ),
             "bottom_corner": (
                 constants["x_min"] + r,
                 constants["y_min"] + r,
                 constants["z_min"] + r,
             ),
         }
     elif shape == "drop":
         drop_r = constants["drop_r"]
         positions = {
             "center": (0, 0, 0),
             "bottom_center": (0, 0, -drop_r + r),
         }
     elif shape == "spot":
         spot_r = constants.get("spot_r", 0)
         spot_bottom_height = constants.get("spot_bottom_height", 0)
