diff --git a/gui_app.py b/gui_app.py
index c0518a3..2de75eb 100644
--- a/gui_app.py
+++ b/gui_app.py
@@ -44,51 +44,51 @@ default_values = {
 # geometry helpers
 # ---------------------------------------------------------------------------
 def _calc_spot_geometry(volume_ul: float, angle_deg: float) -> tuple[float, float, float]:
     """Return (spot_r_mm, bottom_r_mm, bottom_height_mm) from volume and angle."""
     angle_rad = math.radians(angle_deg)
     vol_um3 = volume_ul * 1e9
 
     def cap_volume(R: float) -> float:
         h = R * (1 - math.cos(angle_rad))
         return math.pi * h * h * (3 * R - h) / 3
 
     low = 0.0
     high = max(vol_um3 ** (1 / 3), 1.0)
     while cap_volume(high) < vol_um3:
         high *= 2.0
 
     for _ in range(60):
         mid = (low + high) / 2.0
         if cap_volume(mid) < vol_um3:
             low = mid
         else:
             high = mid
 
     R_um = (low + high) / 2.0
     bottom_r_um = R_um * math.sin(angle_rad)
-    bottom_height_um = -R_um * math.cos(angle_rad)
+    bottom_height_um = R_um * math.cos(angle_rad)
     return R_um / 1000.0, bottom_r_um / 1000.0, bottom_height_um / 1000.0
 
 # ---------------------------------------------------------------------------
 # .ini 読み書きユーティリティ
 # ---------------------------------------------------------------------------
 def save_config(values: dict) -> None:
     cfg = configparser.ConfigParser()
     ordered = {}
     for k in PARAM_ORDER:
         if k not in values:
             continue
         v = values[k]
         if k == "display_mode":
             ordered[k] = ",".join(v) if isinstance(v, list) else str(v)
         else:
             ordered[k] = str(v)
     # 保存対象外のキーもまとめて保存
     for k in sorted(values.keys()):
         if k in ordered or k in PARAM_ORDER:
             continue
         ordered[k] = str(values[k])
     cfg["simulation"] = ordered
     with open(CONFIG_PATH, "w") as f:
         cfg.write(f)
 
diff --git a/gui_app.py b/gui_app.py
index c0518a3..2de75eb 100644
--- a/gui_app.py
+++ b/gui_app.py
@@ -329,52 +329,52 @@ class SimApp(tk.Tk):
                 x_min=-half, x_max=half,
                 y_min=-half, y_max=half,
                 z_min=-half, z_max=half,
             )
 
         elif shape == "drop":
             r = (3 * vol_ul / (4 * math.pi)) ** (1 / 3)
             self.config_data.update(
                 drop_r=r,
                 radius=r,
                 x_min=-r, x_max=r,
                 y_min=-r, y_max=r,
                 z_min=-r, z_max=r,
             )
 
         elif shape == "spot":
             angle = float(self.config_data.get("spot_angle", 0.0))
             spot_r, bottom_r, bottom_h = _calc_spot_geometry(vol_ul, angle)
             self.config_data.update(
                 spot_r=spot_r,
                 spot_bottom_r=bottom_r,
                 spot_bottom_height=bottom_h,
                 radius=spot_r,
                 x_min=-spot_r, x_max=spot_r,
                 y_min=-spot_r, y_max=spot_r,
-                z_min=bottom_h - spot_r,
-                z_max=bottom_h + spot_r,
+                z_min=bottom_h,
+                z_max=spot_r,
             )
 
         elif shape == "ceros":
             self.config_data.update(
                 x_min=-8.15, x_max=8.15,
                 y_min=-8.15, y_max=8.15,
                 z_min=-8.15, z_max=8.15,
             )
 
         # --- ③ generic parameters ------------------------------------
         vsl = float(self.config_data.get("vsl", 0.0))
         hz = float(self.config_data.get("sampl_rate_hz", 1.0))
         self.config_data.update(
             step_length=vsl / hz if hz else 0.0,
             limit=1e-9,
         )
 
         # --- ④ 派生値計算（互換性用） ---------------------------------
         self.config_data = calculate_derived_constants(self.config_data)
 
         # --- ③ ini 保存 -----------------------------------------------
         save_config(self.config_data)
         # --- ④ シミュレーション実行 --------------------------------------
         sim = SpermSimulation(self.config_data)
         sim.run(self.config_data["sim_repeat"])
