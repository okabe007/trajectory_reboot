diff --git a/core/simulation.py b/core/simulation.py
index ae349002ab53ebd6f0f4ed819c7ad15465d4c89f..0f29df95f3585b3590177105f5f6b6838f16eb37 100644
--- a/core/simulation.py
+++ b/core/simulation.py
@@ -713,68 +713,25 @@ class SpermSimulation:
         anim = FuncAnimation(fig, update, init_func=init, frames=n_frames, interval=1000 / fps, blit=False)
 
         base_dir = os.path.dirname(__file__)
         mov_dir = os.path.join(base_dir, "figs_and_movies")
         os.makedirs(mov_dir, exist_ok=True)
         if save_path is None:
             dtstr = datetime.now().strftime("%Y%m%d_%H%M%S")
             save_path = os.path.join(mov_dir, f"trajectory_{dtstr}.mp4")
         else:
             filename = os.path.basename(save_path)
             save_path = os.path.join(mov_dir, filename)
 
         try:
             anim.save(save_path, writer="ffmpeg", fps=fps)
         except Exception as e:
             print(f"[WARN] ffmpeg保存失敗 ({e}) → pillow writerで再試行")
             try:
                 anim.save(save_path, writer="pillow", fps=fps)
             except Exception as e2:
                 print(f"[ERROR] pillow writerでも保存に失敗: {e2}")
                 return None
 
         plt.close(fig)
         print(f"[INFO] 動画を保存しました: {save_path}")
         return save_path
-    
-
-def plot_3d_movie_trajectories(trajs: np.ndarray, constants: dict, save_path=None, show=True):
-    fig = plt.figure()
-    ax = fig.add_subplot(111, projection='3d')
-
-    # === 定義されているべき派生定数 ===
-    xlim = constants.get("xlim", [-1, 1])
-    ylim = constants.get("ylim", [-1, 1])
-    zlim = constants.get("zlim", [-1, 1])
-    radius = constants.get("radius", 1.0)
-    egg_r = constants.get("gamete_r", 0.05)
-    egg_pos = _egg_position(constants)
-
-    def set_ax_3D(ax):
-        ax.set_xlim(xlim)
-        ax.set_ylim(ylim)
-        ax.set_zlim(zlim)
-        ax.set_xlabel("X")
-        ax.set_ylabel("Y")
-        ax.set_zlabel("Z")
-        ax.set_title("3D Sperm Trajectories")
-
-    num_frames = trajs.shape[1]
-    num_sperm = trajs.shape[0]
-
-    def update(frame):
-        ax.cla()
-        set_ax_3D(ax)
-        draw_medium(ax, radius)
-        # draw_egg(ax, egg_pos, egg_r)
-        for s in range(num_sperm):
-            ax.plot(trajs[s, :frame+1, 0],
-                    trajs[s, :frame+1, 1],
-                    trajs[s, :frame+1, 2],
-                    lw=1)
-
-    ani = FuncAnimation(fig, update, frames=num_frames, interval=100)
-
-    if save_path:
-        ani.save(save_path, writer='ffmpeg')
-    if show:
-        plt.show()
