diff --git a/gui_app.py b/gui_app.py
index c0518a3..a7cb551 100644
--- a/gui_app.py
+++ b/gui_app.py
@@ -348,50 +348,54 @@ class SimApp(tk.Tk):
                 spot_r=spot_r,
                 spot_bottom_r=bottom_r,
                 spot_bottom_height=bottom_h,
                 radius=spot_r,
                 x_min=-spot_r, x_max=spot_r,
                 y_min=-spot_r, y_max=spot_r,
                 z_min=bottom_h - spot_r,
                 z_max=bottom_h + spot_r,
             )
 
         elif shape == "ceros":
             self.config_data.update(
                 x_min=-8.15, x_max=8.15,
                 y_min=-8.15, y_max=8.15,
                 z_min=-8.15, z_max=8.15,
             )
 
         # --- ③ generic parameters ------------------------------------
         vsl = float(self.config_data.get("vsl", 0.0))
         hz = float(self.config_data.get("sampl_rate_hz", 1.0))
         self.config_data.update(
             step_length=vsl / hz if hz else 0.0,
             limit=1e-9,
         )
 
+        # --- シミュレーションステップ数を sim_min と sampl_rate_hz から計算 ---
+        sim_min = float(self.config_data.get("sim_min", 0.0))
+        self.config_data["number_of_steps"] = int(sim_min * 60 * hz)
+
         # --- ④ 派生値計算（互換性用） ---------------------------------
         self.config_data = calculate_derived_constants(self.config_data)
 
         # --- ③ ini 保存 -----------------------------------------------
         save_config(self.config_data)
         # --- ④ シミュレーション実行 --------------------------------------
         sim = SpermSimulation(self.config_data)
         sim.run(self.config_data["sim_repeat"])
 
         # --- ⑤ 描画 -----------------------------------------------------
         if "2D" in modes:
             plot_2d_trajectories(np.array(sim.trajectory), self.config_data)
         elif "3D" in modes:
             plot_3d_trajectories(np.array(sim.trajectory), self.config_data)
         elif "movie" in modes:
             sim.plot_movie_trajectories()   # 実装に合わせて
 
 
     # ---------------------------------------------------------------------
     # 起動時に .ini から各 Tk 変数を復元
     # ---------------------------------------------------------------------
     def _restore_from_config(self) -> None:
         for k, var in self.tk_vars.items():
             if k not in self.config_data:
                 continue
